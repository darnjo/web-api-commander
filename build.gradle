/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */

plugins {
  // Apply the java plugin to add support for Java
  id 'java'

  // Apply the application plugin to add support for building an application
  id 'application'
}

repositories {
  // Use jcenter for resolving your dependencies.
  // You can declare any Maven/Ivy/file repository here.
  jcenter()
}

dependencies {
  implementation 'com.google.guava:guava:27.0.1-jre'

  compile 'commons-cli:commons-cli:1.4'

  compile 'org.apache.logging.log4j:log4j-api:2.12.1'
  compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.12.1'
  compile 'org.apache.logging.log4j:log4j-1.2-api:2.12.1'
  compile 'org.apache.logging.log4j:log4j-core:2.12.1'

  compile 'org.apache.olingo:odata-client-api:4.6.0'
  compile 'org.apache.olingo:odata-commons-core:4.6.0'
  compile 'org.apache.olingo:odata-client-core:4.6.0'

  testImplementation 'junit:junit:4.12'
}

jar {
  manifest {
    attributes(
        'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
        'Main-Class': 'org.reso.commander.Main'
    )
  }

  // generate "fat jar" by default
  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

// don't suppress warnings or deprecation notices
tasks.withType(JavaCompile) {
  options.compilerArgs << '-Xlint:unchecked'
  options.deprecation = true
}

task copyJarToOut(type: Copy, dependsOn: [clean, jar]) {
  from jar
  into "out"
}

// Define the main class for the application
mainClassName = 'org.reso.commander.Main'
sourceCompatibility = 1.8
targetCompatibility = 1.8
